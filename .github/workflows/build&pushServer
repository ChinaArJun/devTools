name: deploy to aliyun oss

on:
  push:
  schedule:
  - cron:  '30 20 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # 切代码到 runner
    - run: |
        node -v
    - run: |
        free -h
    - run: ls -lah
    - uses: actions/checkout@v1
      with:
        submodules: true
    - run: ls -lah
    # 下载 git submodule
    - uses: srt32/git-actions@v0.0.3
      with:
        args: git submodule update --init --recursive
    # 使用 node:10
    - name: use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
        
    - run: |
        node -v
    # npm install
    - name: npm install
      run: npm install
        
    - run: |
        node -v
    # npm install
    # - name: build && push server
    #   run: npm run build
    
    - name: 1、准备开始执行提交静态文件到GithubIO博客 - Checkout # 步骤1
      uses: actions/checkout@v1 # 使用的动作。格式：userName/repoName。作用：检出仓库，获取源码。 官方actions库：https://github.com/actions
    - name: Use Node.js ${{ matrix.node-version }} # 步骤2
      uses: actions/setup-node@v1 # 作用：安装nodejs
      with:
        node-version: ${{ matrix.node-version }} # 版本
    - name: chmod 777
      run: chmod 777 *.sh
    - name: run deploy.sh # 步骤3 （同时部署到github和coding）
      env: # 设置环境变量
        GITHUB_TOKEN: ${{ secrets.AJ_GITHUB_TOKEN }} # toKen私密变量
        CODING_TOKEN: ${{ secrets.CODING_TOKEN }} # 腾讯云开发者平台（coding）私密token
      run: npm run deploy # 执行的命令  


    # - name: 服务器云部署采用coding自动化部署到腾讯云服务器
    # - name: 2、准备开始执行上传本地静态文件到服务器博客 deploy file to prod server 
    #   if: github.ref == 'refs/heads/master' #对分支进行检测
    #   uses: wlixcc/SFTP-Deploy-Action@v1.0
    #   with:
    #     username: 'root'   #ssh user name
    #     server: '${{ secrets.SERVER_IP }}' #引用之前创建好的secret
    #     ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }} #引用之前创建好的secret
    #     local_path: './.vuepress/dist/*'  # 对应我们项目build的文件夹路径
    #     remote_path: '/data/wwwroot/blog.zhequtao.com'
